services:
  backend:
    container_name: go-backend
    build:
      context: ./server
      dockerfile: Dockerfile
    tty: true
    stdin_open: true
    ports:
    - "8080:8080"
    networks:
    - app_network
    environment:
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASS}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}
      - MYSQL_URL=${MYSQL_URL}
      - FIREBASE_SERVICE_ACCOUNT_KEY_PATH=${FIREBASE_SERVICE_ACCOUNT_KEY_PATH}
    volumes:
      - ./.env:/.env
      - ./aminavi-46dfc-firebase-adminsdk-fbsvc-54a4015174.json:/app/aminavi-46dfc-firebase-adminsdk-fbsvc-54a4015174.json
      - ./aminavi-652103e6dc0c.json:/app/aminavi-652103e6dc0c.json
      - ./august-button-470219-d5-5cc12900c9b1.json:/app/august-button-470219-d5-5cc12900c9b1.json
    depends_on:
      db:
        condition: service_healthy
      ml-service:
        condition: service_started

  ml-service:
    container_name: python-ml
    build:
      context: ./ml
      dockerfile: Dockerfile
    ports:
    - "8501:8501"
    networks:
    - app_network

  db:
    image: mysql
    container_name: mysql-db
    build: 
      context: ./db
      dockerfile: Dockerfile
    volumes:
    - db_data:/var/lib/mysql
    ports:
    - "3306:3306"
    networks:
    - app_network
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "db"]
      interval: 5s
      timeout: 3s
      retries: 5

networks:
    app_network:
      driver: bridge

volumes:
  db_data:
