apiVersion: apps/v1
kind: Deployment
metadata:
  name: aminavi-deployment
  labels:
    app: aminavi
spec:
  replicas: 1
  selector:
    matchLabels:
      app: aminavi
  template:
    metadata:
      labels:
        app: aminavi
    spec:
      containers:
        - name: mysql
          image: mysql:latest
          ports:
            - containerPort: 3306
          env:
            - name: MYSQL_USER
              valueFrom:
                secretKeyRef:
                  name: app-env
                  key: DB_USER
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: app-env
                  key: DB_PASS
            - name: MYSQL_DATABASE
              valueFrom:
                secretKeyRef:
                  name: app-env
                  key: MYSQL_DATABASE
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: app-env
                  key: MYSQL_ROOT_PASSWORD
          volumeMounts:
            - name: mysql-data
              mountPath: /var/lib/mysql
          readinessProbe:
            tcpSocket:
              port: 3306
            initialDelaySeconds: 15
            periodSeconds: 5
            failureThreshold: 5
          livenessProbe:
            tcpSocket:
              port: 3306
            initialDelaySeconds: 30
            periodSeconds: 20
          resources:
            limits:
              memory: "512Mi"
            requests:
              memory: "256Mi"

        - name: python-ml
          image: assam5649/python-ml:latest
          ports:
            - containerPort: 8501
          lifecycle:
            postStart:
              exec:
                command: ["mkdir", "-p", "/app/ml/model"]
          envFrom:
            - secretRef:
                name: app-env
          volumeMounts:
            - name: gcs-json-volume
              mountPath: /app/gcs-owner.json
              subPath: gcs-owner.json
            - name: gcs-json-volume
              mountPath: /app/gcs.json
              subPath: gcs.json
          resources:
            limits:
              memory: "1Gi" 
            requests:
              memory: "512Mi"

        - name: go-backend
          image: assam5649/go-backend:latest
          ports:
            - containerPort: 8080
          env:
            - name: DB_NAME
              valueFrom:
                secretKeyRef:
                  name: app-env
                  key: MYSQL_DATABASE
            - name: GOOGLE_APPLICATION_CREDENTIALS 
              value: "/app/firebase.json"
          envFrom:
            - secretRef:
                name: app-env
          volumeMounts:
            - name: firebase-json-volume
              mountPath: /app/firebase.json
              subPath: firebase.json
            - name: gcs-json-volume
              mountPath: /app/gcs-owner.json
              subPath: gcs-owner.json
            - name: gcs-json-volume
              mountPath: /app/gcs.json
              subPath: gcs.json
          readinessProbe:
            tcpSocket:
              port: 3306
            initialDelaySeconds: 30
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 6

      volumes:
        - name: firebase-json-volume
          secret:
            secretName: firebase-json
        - name: gcs-json-volume
          secret:
            secretName: gcs-secrets
        - name: mysql-data
          emptyDir: {}
